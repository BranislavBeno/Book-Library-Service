# This workflow deploys all resources that are specific to the book-library-service, but not the app itself.
name: 03 - Manually create application specific environment resources

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'The name of the environment in which to deploy the application specific environment resources.'
        required: true
        default: 'staging'

jobs:
  deploy-messaging-stack:
    name: Deploy the messaging stack
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: NPM install
        working-directory: cdk
        run: |
          npm i -D aws-cdk@latest
          rm -fr node_modules package-lock.json cdk.out
          npm i

      - name: Deploy messaging stack
        working-directory: cdk
        run: npm run messaging:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-database-stack:
    name: Deploy the RDS stack
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: NPM install
        working-directory: cdk
        run: |
          npm i -D aws-cdk@latest
          rm -fr node_modules package-lock.json cdk.out
          npm i

      - name: Deploy RDS stack
        working-directory: cdk
        run: npm run database:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-cognito-stack:
    name: Deploy the Cognito stack
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: NPM install
        working-directory: cdk
        run: |
          npm i -D aws-cdk@latest
          rm -fr node_modules package-lock.json cdk.out
          npm i

      - name: Deploy Cognito stack
        working-directory: cdk
        run: npm run cognito:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-dynamo-db-stack:
    name: Deploy the DynamoDB stack
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: NPM install
        working-directory: cdk
        run: |
          npm i -D aws-cdk@latest
          rm -fr node_modules package-lock.json cdk.out
          npm i

      - name: Deploy DynamoDB stack
        working-directory: cdk
        run: npm run dynamo:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}

  deploy-monitoring-stack:
    name: Deploy the monitoring stack
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'gradle'

      - name: NPM install
        working-directory: cdk
        run: |
          npm i -D aws-cdk@latest
          rm -fr node_modules package-lock.json cdk.out
          npm i

      - name: Deploy monitoring stack
        working-directory: cdk
        run: npm run monitoring:deploy -- -c environmentName=${{ github.event.inputs.environmentName }}
